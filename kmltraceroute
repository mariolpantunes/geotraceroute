#! /bin/bash

cachedir=cache

default_gateway=$(netstat -rn | grep '^\(default\|0\.0\.0\.0\)' | awk '{print $2}')

header() {
    cat <<HEADER
<?xml version="1.0" encoding="UTF-8"?>
<kml xmlns="http://www.opengis.net/kml/2.2">
<Document>

<Style id="source">
<IconStyle>
<Icon>
<href>https://raw.githubusercontent.com/mariolpantunes/kmltraceroute/master/icons/flag.png</href>
</Icon>
</IconStyle>
</Style>

<Style id="jump">
<IconStyle>
<Icon>
<href>https://raw.githubusercontent.com/mariolpantunes/kmltraceroute/master/icons/server.png</href>
</Icon>
</IconStyle>
</Style>

<Style id="destination">
<IconStyle>
<Icon>
<href>https://raw.githubusercontent.com/mariolpantunes/kmltraceroute/master/icons/destination.png</href>
</Icon>
</IconStyle>
</Style>

<Style id="lost">
<IconStyle>
<Icon>
<href>https://raw.githubusercontent.com/mariolpantunes/kmltraceroute/master/icons/wrong.png</href>
</Icon>
</IconStyle>
</Style>

HEADER
}

gettraceroute4() {
    storename="$cachedir/tcptraceroute-$1"
    tmpname="$storename-$$.new"
    if [ -s "$storename" ] ; then
	cat "$storename"
    else
    traceroute -T -n $1 | tee "$tmpname"
    fi |
	tail -n +2 |
	awk '{print $2" "$3}' | 
    grep -v '[*]'
    #awk '{print $2}' |
	#grep -E '^([0-9]{1,3}[\.]){3}[0-9]{1,3}$'
    if [ -s "$tmpname" ] ; then
	    mv "$tmpname" "$storename"
    fi
}

getIP4location() {
    local C=""
    local IP=$1
    
    if [ -e GeoIP-override.txt ] ; then
	C="$(grep "^$IP " GeoIP-override.txt | cut -d"#" -f1)"
    fi
   
    if [ -z "$C" ] && [ -e "$cachedir/GeoIP-cache.txt" ] ; then
    C=$(grep -m 1 "^$IP " "$cachedir/GeoIP-cache.txt")
    fi

    if [ "$C" ]; then
	LONG=$(echo "$C" |cut -d" " -f2)
	LAT=$(echo "$C" |cut -d" " -f3)
	return
    fi

    LONG=""
    LAT=""
    
    if [ "$default_gateway" = "$IP" ]; then
    url=https://freegeoip.live/json/
    else
    url=https://freegeoip.live/json/$IP
    fi
    
    LOCATION=$(curl -s $url | jq -r '.longitude, .latitude')
    if [ "$LOCATION" ]; then
    read LONG LAT < <(echo $LOCATION)
    echo $IP $LONG $LAT >> "$cachedir/GeoIP-cache.txt"
    fi
}

tracehost() {
    targetip="$1"
    targetname="$2"
    local LONGLATS=""
    local ICON=""
    targetreverse=$(getent hosts "$targetip"|awk '{print $2}')
    echo "<!-- traceroute for $targetname / $targetreverse [$targetip] -->"
    #IPS=($(gettraceroute4 "$targetip"))
    RES=$(gettraceroute4 "$targetip")
    
    IPS=()
    RTLS=()

    while IFS= read -r line; do
    IPS+=($(echo $line | awk '{print $1}'))
    RTLS+=($(echo $line | awk '{print $2}'))
    done <<< "$RES"

    max=${RTLS[0]}
    min=${RTLS[1]}

    for i in "${RTLS[@]}"; do
        #echo -e $i
        (( $(echo "$i > $max" |bc -l) )) && max=$i
        #(( $(echo "$i < $min" |bc -l) )) && min=$i
    done

    #echo "Max value is $max, minimal value is $min"

    STEP=$(echo "($max-$min)/5.0" |bc -l)
    #echo -e "STEP = $STEP"
    THRES1=$(echo "$min + $STEP" |bc -l)
    #echo -e "THRES1 = $THRES1"
    THRES2=$(echo "$THRES1 + $STEP" |bc -l)
    #echo -e "THRES2 = $THRES2"
    THRES3=$(echo "$THRES2 + $STEP" |bc -l)
    #echo -e "THRES3 = $THRES3"
    THRES4=$(echo "$THRES3 + $STEP" |bc -l)
    #echo -e "THRES4 = $THRES4"

    END=$(expr ${#IPS[@]} - 1)
    for i in $(seq 0 $END); do
    
    IP=${IPS[i]}
    NEXT_IP=${IPS[((i+1))]}

    getIP4location "$IP"
	name=$(getent hosts "$IP" | awk '{print $2}')
	LONGLAT="${LONG},${LAT} "

    getIP4location "$NEXT_IP"
	NEXTLONGLAT="${LONG},${LAT} "

    ICON="jump"
    if [ "$IP" = "${IPS[0]}" ]; then
        ICON="source"
    fi

	if [ "$targetip" = "$IP" ]; then
		labelname="$targetname"
        ICON="destination"
	else
		labelname=""
	fi

    if [ "$LONGLAT" = "0,0 " ]; then
        ICON="lost"
    fi

    cat <<EOF
<Placemark>
<name>$labelname</name>
<description>GeoIP position for $name [$IP]</description>
<styleUrl>#$ICON</styleUrl> 
<Point><coordinates>$LONGLAT</coordinates></Point>
</Placemark>
EOF

    if [ $i -lt $END ]; then
        RTL=${RTLS[((i+1))]}
        local COLOR="ff3b55ed"
       
        if (( $(echo "$RTL <= $THRES4" |bc -l) )); then
            COLOR="ff5cd5f6"
        fi

        if (( $(echo "$RTL <= $THRES3" |bc -l) )); then
            COLOR="ffa3ae3c"
        fi

        if (( $(echo "$RTL <= $THRES2" |bc -l) )); then
            COLOR="ff9b6320"
        fi

        if (( $(echo "$RTL <= $THRES1" |bc -l) )); then
            COLOR="ff5f3f17"
        fi

        cat <<EOF

<Placemark> 
<LineString>
<coordinates>
$LONGLAT
$NEXTLONGLAT
</coordinates>
</LineString>
<Style> 
<LineStyle>  
<color>#$COLOR</color>
</LineStyle> 
</Style>
</Placemark>

EOF
    fi
done
}

footer() {
    cat <<FOOTER
</Document>
</kml>
FOOTER
}

usage() {
    cat <<EOF
Usage: $0 <host> [<host> ...]

Collect TCP traceroutes using 'sudo tcptraceroute' and up each route
using GeoIP and output a KML file to stdout with the georeferenced
traces.

The traceoutes are cached in ./cache/, and the GeoIP location data can
be replaced with entires in GeoIP-override.txt.

EOF
    }

if [ -z "$1" ]; then
    usage
    exit 1
fi

header
#echo -e "$@"
#for h in "$@" ; do
    # Trace all locations if host have many IP addresses
    #for ip in $(host $h|awk '/has address/ {print $4}'); do
ip=($(host $1|awk '/has address/ {print $4}'))
tracehost "${ip[0]}" "$h"
    #done
#done
footer
